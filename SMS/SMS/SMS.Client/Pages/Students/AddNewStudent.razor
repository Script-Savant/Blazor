@page "/add-student"
@using SMS.Shared.Models
@rendermode InteractiveAuto
@inject NavigationManager Navigation;

<h3>Add New Student</h3>

<br/>

<div class="row">
    <div class="col-md-12 form-control p-3">
        <EditForm Model="StudentObj" OnValidSubmit="CreateStudent" FormName="addStudent">
            
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            
            <div class="col-md-12">
                <div class="row">
                    
                    <div class="col-md-6">
                        <div class="mb-2">
                            <label class="form-label">Registration No</label>
                            <InputText for="RegNo" class="form-control" @bind-Value="@StudentObj.RegNo"/>
                            <ValidationMessage For="() => StudentObj.RegNo"/>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="mb-2">
                            <label class="form-label">First Name</label>
                            <InputText for="FirstName" class="form-control" @bind-Value="@StudentObj.FirstName"/>
                            <ValidationMessage For="() => StudentObj.FirstName"/>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="mb-2">
                            <label class="form-label">Middle Name</label>
                            <InputText for="MiddleName" class="form-control" @bind-Value="@StudentObj.MiddleName"/>
                            <ValidationMessage For="() => StudentObj.MiddleName"/>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="mb-2">
                            <label class="form-label">Last Name</label>
                            <InputText for="LastName" class="form-control" @bind-Value="@StudentObj.LastName"/>
                            <ValidationMessage For="() => StudentObj.LastName"/>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="mb-2">
                            <label class="form-label">Gender</label>
                            <InputSelect for="FirstName" class="form-control" @bind-Value="@StudentObj.Gender">
                                <option value="">Gender</option>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                                <option value="Other">Other</option>
                            </InputSelect>
                            <ValidationMessage For="() => StudentObj.Gender"/>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="mb-2">
                            <label class="form-label">Email</label>
                            <InputText for="EmailAddress" type="email" class="form-control" @bind-Value="@StudentObj.EmailAddress"/>
                            <ValidationMessage For="() => StudentObj.EmailAddress"/>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="mb-2">
                            <label class="form-label">Phone Number</label>
                            <InputText for="PhoneNumber" class="form-control" @bind-Value="@StudentObj.PhoneNumber"/>
                            <ValidationMessage For="() => StudentObj.PhoneNumber"/>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="mb-2">
                            <label class="form-label">Student Address</label>
                            <InputText for="StudentAddress" class="form-control" @bind-Value="@StudentObj.StudentAddress"/>
                            <ValidationMessage For="() => StudentObj.StudentAddress"/>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="mb-2">
                            <label class="form-label">Country</label>
                            <InputSelect for="FirstName" class="form-control" @bind-Value="@StudentObj.Country">
                                <option value="">Select Country</option>
                                @foreach (var country in _countries)
                                {
                                    <option value="@country.Name">@country.Name</option>
                                }
                                
                            </InputSelect>
                            <ValidationMessage For="() => StudentObj.Country"/>
                        </div>
                    </div>
                    
                    <div class="col-md-6">
                        <div class="mb-2">
                            <label class="form-label">DOB</label>
                            <InputDate for="BirthDate" class="form-control" @bind-Value="@StudentObj.BirthDate"/>
                            <ValidationMessage For="() => StudentObj.BirthDate"/>
                        </div>
                    </div>
                    
                    <div class="btn-group mt-4">
                        <button type="submit" class="btn btn-primary mr-3">Save Student</button>
                        <button type="button" @onclick="Cancel" class="btn btn-secondary">Back to list</button>
                    </div>
                    
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {

    [SupplyParameterFromForm]
    public Student StudentObj { get; set; } = new Student
    {
        RegNo = "",
        FirstName = "",
        MiddleName = "",
        LastName = "",
        EmailAddress = "",
        StudentAddress = "",
        PhoneNumber = "",
        Country = ""
    };

    private readonly List<Country> _countries = new();

    protected override async Task OnInitializedAsync()
    {
        var countries = await CountryService.GetAllCountriesAsync();
        _countries.AddRange(countries);
    }

    protected async Task CreateStudent()
    {
        await StudentService.AddStudentAsync(StudentObj);
            
        Navigation.NavigateTo("/students-list");
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/students-list");
    }

}