@page "/students-list"
@using SMS.Shared.Models
@rendermode InteractiveAuto

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">Students List</h2>
        <a href="/add-student" class="btn btn-primary">Add New Student</a>
    </div>

    @if (!AllStudents.Any())
    {
        <div class="alert alert-secondary text-center">
            <em>Loading students...</em>
        </div>
    }
    else if (AllStudents.Count > 0)
    {
        <div class="table-responsive shadow-sm rounded border">
            <table class="table table-striped table-hover mb-0">
                <thead class="table-info">
                    <tr>
                        <th>ID</th>
                        <th>First Name</th>
                        <th>Middle Name</th>
                        <th>Last Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Country</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody class="table-group-divider">
                    @foreach (var student in AllStudents)
                    {
                        <tr>
                            <td>@student.Id</td>
                            <td class="text-capitalize">@student.FirstName</td>
                            <td class="text-capitalize">@student.MiddleName</td>
                            <td class="text-capitalize">@student.LastName</td>
                            <td>@student.EmailAddress</td>
                            <td>@student.PhoneNumber</td>
                            <td class="text-capitalize">@student.Country</td>
                            <td>
                                <a href="/student/edit/@student.Id" class="btn btn-sm btn-outline-success">Edit</a>
                            </td>
                            <td>
                                <a href="/student/delete/@student.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-info text-center">
            There are no students in the system yet.
        </div>
    }
</div>

@code {
    private List<Student> AllStudents { get; set; } = new();

    private async Task LoadAllStudents()
    {
        var students = await StudentService.GetAllStudentsAsync();
        AllStudents.Clear();

        if (students is not null)
        {
            AllStudents.AddRange(students);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadAllStudents();
    }
}
